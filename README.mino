MINO texting language
=====================

//This README.md is itself a demo, as it's generated automatically from mino ;-)//

# Intro
    //mino// is a custom markdown syntax for writing documentation, notes, memos.
    - It's purely text based, so:
        - Doesn't requires heavy software for writing
        - Allows managing revisions as usual with git or others tools.
    - //mino// is indentation based so documents can even be read from the text editor without formating
    - It supports mixing python code and doc, so the document can be dynamically fed at runtime
    - It supports various plugins
    - It's independant from any output format. So one input can generate several outputs (complete pdf paper and summary slides for example)

    # Why Mino ?
        Because //mino// Is Not Office ;-)

# How to write MINO
    # MINO Tags
        - Document title
            __Example__ :
            ``` text
                My doc title
                ============
            ```

        - Chapter title
            The nested level is based on the element indentation
            __Example__ :
            ``` text
                # Chaper title
            ```
        - Simple text
            As simple as it looks.
            Don't forget indentation

        - Unordered list
            __Example__ :
            ``` text
                - one
                - two
                - three
            ```
            
        - Ordered list
            The numbering has no actual impact
            __Example__ :
            ``` text
                1. one
                1. two
                1. three
            ```

        - Table
            __Example__ :
            ``` text
                | x | y |
                | 1 | 1 |
                | 2 | 4 |
                | 3 | 9 |
            ```

        - Bloc of code
            __Example__ :
            ``` text
                ` ` ` the-language-name (cpp, python, javascript, text, ...)
                    #include <xxx>
                    ...
                ` ` `
            ```

        - Link
            __Example__ :
            ``` text
                !(www.google.fr)(Visit Google)
            ```

        - Image
            __Example__ :
            ``` text
                !!(https://i.ytimg.com/vi/oM1EVAYahFE/maxresdefault.jpg)(Visit me)
            ```

        - Plugin invokation
            __Example__ :
            ``` text
                _{ python
                    x = 3 + 3
                }_
                ...
                _{ python
                    print 'x = ', x 
                }_
            ```

# MINO plugins
    Documentation coming soon...

# Observability
    Documentation coming soon...

    # Observability

    # Output formats
        - html
        - Presentation slides, thanks to reveal.js
            Horizontal slides are supported.
            To create slide, just add the following above a block :
            ``` text
                [class=slide]
            ```

            And use the **HtmlRevealObserver**

# Filtering
    Documentation coming soon...

# Dependencies
    | Name | Usage |
    | pygments | source code syntax coloring |
    | Reveal.js | slide presentation output |
    | plantuml python package | plantuml plugin |
    | pydot2 python package, and graphviz installed | for graphviz plugin |


